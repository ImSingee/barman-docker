name: Docker

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

on:
  schedule:
    - cron: "35 3 * * *"
  push:
    branches:
      - main
  workflow_dispatch:

env:
  # Use docker.io for Docker Hub if empty
  REGISTRY: ghcr.io
  # github.repository as <account>/<repo>
  IMAGE_NAME: ${{ github.repository }}
  LATEST_BUILT_BARMAN: ${{ secrets.LATEST_BUILT_BARMAN }}

jobs:
  build:
    runs-on: ubuntu-latest
    # permissions:
    #   contents: read
    #   packages: write
    #   id-token: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      # Install the cosign tool except on PR
      # https://github.com/sigstore/cosign-installer
      - name: Install cosign
        uses: sigstore/cosign-installer@e1523de7571e31dbe865fd2e80c5c7c23ae71eb4 #v3.0.3
        with:
          cosign-release: "v1.11.0"

      - name: Setup Docker buildx
        uses: docker/setup-buildx-action@v3

      - name: Log into registry ${{ env.REGISTRY }}
        uses: docker/login-action@343f7c4344506bcbf9b4de18042ae17996df046d
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Get Barman Latest Release
        id: barman_tag
        uses: pozetroninc/github-action-get-latest-release@master
        with:
          excludes: draft,prerelease
          repository: EnterpriseDB/barman

      - name: Remove `release/` from barman tag name
        id: barman_version
        env:
          RELEASE: ${{ steps.barman_tag.outputs.release }}
        run: |
            echo "value=${RELEASE#release/}" >> $GITHUB_OUTPUT
          
      
      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
              type=raw,value=${{ steps.barman_version.outputs.value }}
              type=raw,value=latest

      - name: Build and push Docker image
        id: build-and-push-release
        uses: docker/build-push-action@v6
        if: (env.LATEST_BUILT_BARMAN != steps.barman_version.outputs.value) || (github.event_name == 'push')
        with:
          context: .
          build-args: |
            BARMAN_VERSION=${{ steps.barman_version.outputs.value }}
            SOURCE_INSTALL=0
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - uses: hmanzur/actions-set-secret@v2.0.0
        with:
          name: "LATEST_BUILT_BARMAN"
          value: "${{ steps.barman_version.outputs.value }}"
          token: ${{ secrets.SECRET_UPDATE_TOKEN }}


